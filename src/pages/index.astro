---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Tell-It-To-Me-Like.com">
	<main style="max-width: 800px; margin: 0 auto; padding: 2rem; text-align: center;">
		<h1 style="font-size: 3rem; margin-bottom: 1rem;">Tell-It-To-Me-Like.com</h1>
		<p style="font-size: 1.2rem; line-height: 1.6; margin-bottom: 2rem;">
			Ever wish someone could just explain it to you simply? Or maybe you're the expert, and you're tired of repeating yourself?
			This is the place where people who know things come to learn how to teach others about it, and where people come to learn from content that's broken down into easily digestible pieces.
		</p>

		<section style="margin-bottom: 3rem;">
			<h2 style="font-size: 2rem; margin-bottom: 1rem;">How it Works:</h2>
			<p style="font-size: 1.1rem; line-height: 1.5;">
				You tell our AI what you want to teach, and it will ask a few clarifying questions to make sure it understands.
				Then, it will generate useful teaching aids and explainers, starting with a free PDF.
			</p>
		</section>

		<section style="margin-bottom: 3rem;">
			<h2 style="font-size: 2rem; margin-bottom: 1rem;">Examples:</h2>
			<div style="display: flex; justify-content: center; gap: 2rem;">
				<div style="background-color: #f0f0f0; padding: 1.5rem; border-radius: 8px; width: 45%;">
					<h3>"How to Change a Tire"</h3>
					<p>A step-by-step guide for someone who's never done it before.</p>
					<!-- Placeholder for example output image/link -->
				</div>
				<div style="background-color: #f0f0f0; padding: 1.5rem; border-radius: 8px; width: 45%;">
					<h3>"Making Grandma's Pancakes"</h3>
					<p>A simple recipe broken down for a young cook.</p>
					<!-- Placeholder for example output image/link -->
				</div>
			</div>
		</section>

		<section style="background-color: #e6f7ff; padding: 2rem; border-radius: 10px;">
			<h2 style="font-size: 2rem; margin-bottom: 1.5rem;">Start Explaining!</h2>
			<div style="background-color: #fff; padding: 1.5rem; border-radius: 8px; border: 1px solid #ccc;">
				<p style="margin-bottom: 1rem;">What do you want to teach, or what do you want to learn about?</p>
				<!-- Placeholder for chat input area -->
				<textarea id="topicInput" style="width: 90%; height: 100px; padding: 10px; border: 1px solid #ddd; border-radius: 5px; font-size: 1rem;" placeholder="Type your topic here..."></textarea>
				<button id="startChatButton" style="background-color: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 1rem; margin-top: 1rem;">Start Chat</button>

				<script is:inline>
					const topicInput = document.getElementById('topicInput');
					const startChatButton = document.getElementById('startChatButton');
					const chatInputArea = document.getElementById('chatInputArea');
					const aiOutputArea = document.getElementById('aiOutputArea');
					const aiOutputText = document.getElementById('aiOutputText');

					startChatButton.addEventListener('click', async () => {
						const topic = topicInput.value;
						console.log('User wants to teach about:', topic);

						if (topic.trim() === '') {
							alert('Please enter a topic.');
							return;
						}

						// Hide input area, show loading or disable input
						chatInputArea.style.display = 'none';
						aiOutputArea.style.display = 'block'; // Show AI output area
						aiOutputText.textContent = 'Generating explanation...';

						try {
							const response = await fetch('https://n8n.srv874889.hstgr.cloud/webhook-test/acme', {
								method: 'POST',
								headers: {
									'Content-Type': 'application/json',
								},
								body: JSON.stringify({ topic: topic }),
							});

							if (response.ok) {
								const data = await response.json();
								// Assuming n8n sends back { "ai_output": "Your AI generated text" }
								aiOutputText.textContent = data.ai_output || 'No explanation generated.';
							} else {
								alert('Failed to submit topic to n8n. Status: ' + response.status);
								console.error('n8n submission error:', await response.text());
								aiOutputText.textContent = 'Error generating explanation.';
							}
						} catch (error) {
							alert('An error occurred while submitting the topic.');
							console.error('Fetch error:', error);
							aiOutputText.textContent = 'Error generating explanation.';
						}
					});

					// Add event listeners for Approve/Edit buttons (to be implemented later)
					// For now, just log to console
					document.getElementById('approveButton').addEventListener('click', () => {
						alert('Content Approved! (Action to be implemented)');
						// Here you would send a signal back to n8n to proceed with PDF generation
					});

					document.getElementById('editButton').addEventListener('click', () => {
						alert('Edit Content! (Action to be implemented)');
						// Here you would make the aiOutputText editable or redirect to an edit page
					});
				</script>
			</div>
		</section>

		<section id="aiOutputArea" style="background-color: #e0ffe0; padding: 2rem; border-radius: 10px; display: none;">
			<h2 style="font-size: 2rem; margin-bottom: 1.5rem;">AI Generated Explanation:</h2>
			<div style="background-color: #fff; padding: 1.5rem; border-radius: 8px; border: 1px solid #ccc; text-align: left;">
				<p id="aiOutputText" style="white-space: pre-wrap;"></p>
			</div>
			<div style="margin-top: 1.5rem;">
				<button id="approveButton" style="background-color: #28a745; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 1rem; margin-right: 1rem;">Approve</button>
				<button id="editButton" style="background-color: #ffc107; color: black; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 1rem;">Edit</button>
			</div>
			</div>
		</section>
	</main>
</Layout>